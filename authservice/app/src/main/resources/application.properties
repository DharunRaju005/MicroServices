#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##spring.datasource.url=jdbc:mysql:// 10.1.216.96:3306/authservice?allowPublicKeyRetrieval=true&useSSL=falsespring.datasource.username=root
##spring.datasource.url=jdbc:mysql://10.1.222.78:3306/authservice?useSSL=false
#
##Hostel
#spring.datasource.url=jdbc:mysql:// 10.1.216.96:3306/authservice?useSSL=false&allowPublicKeyRetrieval=true
#
##Iqoo
##spring.datasource.url=jdbc:mysql://192.168.23.215:3306/authservice?useSSL=false&allowPublicKeyRetrieval=true
#
#spring.datasource.username=dr
#
#spring.datasource.password=dr
#
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
##spring.jpa.properties.hibernate.hbm2ddl.auto=update
#server.port=8081
#logging.level.org.springframework.security=DEBUG
#logging.level.your.package.name=DEBUG

#
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://mysql:3306/authservice?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
#spring.datasource.username=test
#spring.datasource.password=password
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#server.port=9811
#spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.minimum-idle=10
#
##kafka - event publicsher
##ip of vm
#spring.kafka.producer.bootstrap-servers= kafka:9092
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer= org.example.serialiser.UserInfoSerialiser
#spring.kafka.topic-json.name=user_service
#spring.kafka.topic.name=testing_json
#spring.kafka.producer.properties.spring.json.type.mapping=auth:authservice.model.UserInfoDto
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB:authservice}?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:password}
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
server.port=9811
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10

# Kafka - event publisher
spring.kafka.producer.bootstrap-servers=${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.example.serialiser.UserInfoSerialiser
spring.kafka.topic-json.name=user_service
spring.kafka.topic.name=testing_json
spring.kafka.producer.properties.spring.json.type.mapping=auth:authservice.model.UserInfoDto

# Logging
logging.level.org.springframework=INFO
logging.level.org.hibernate=DEBUG
logging.level.com.zaxxer.hikari=DEBUG

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE



spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.initialization-fail-timeout=60000
#spring.datasource.hikari.max-lifetime=1800000

# SpringDoc OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-request-duration=true
springdoc.default-consumes-media-type=application/json
springdoc.default-produces-media-type=application/json



# 1. Periodically keep idle connections alive (prevents server timeout issues)
spring.datasource.hikari.keepalive-time=300000

# 2. Validates connections before using them (avoids using stale/dead ones)
spring.datasource.hikari.connection-test-query=SELECT 1

# Reduce idle timeout so that unused connections close sooner
spring.datasource.hikari.idle-timeout=600000

# Allow a bit of margin for MySQL server-side idle timeout (see below)
spring.datasource.hikari.max-lifetime=1740000